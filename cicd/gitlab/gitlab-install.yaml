---
# Source: gitlab-ce/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-postgresql
  labels:
    app: gitlab-postgresql
    chart: "postgresql-0.8.1"
    release: "gitlab"
    heritage: "Tiller"
type: Opaque
data:
  
  postgres-password:  "Z2l0bGFi"
  

---
# Source: gitlab-ce/charts/redis/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-redis
  labels:
    app: gitlab-redis
    chart: "redis-0.9.0"
    release: "gitlab"
    heritage: "Tiller"
type: Opaque
data:
  redis-password: "Z2l0bGFi"
---
# Source: gitlab-ce/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-gitlab-ce
  labels:
    app: gitlab-gitlab-ce
    chart: "gitlab-ce-0.2.2"
    release: "gitlab"
    heritage: "Tiller"
type: Opaque
data:
  db-user: "Z2l0bGFi"
  db-password: "Z2l0bGFi"
  redis-password: "Z2l0bGFi"

---
# Source: gitlab-ce/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-gitlab-ce
  labels:
    app: gitlab-gitlab-ce
    chart: "gitlab-ce-0.2.2"
    release: "gitlab"
    heritage: "Tiller"
data:
  ## This is used by GitLab Omnibus as the primary means of configuration.
  ## ref: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template
  ##
  gitlab_omnibus_config: |
    external_url ENV['EXTERNAL_URL'];
    root_pass = ENV['GITLAB_ROOT_PASSWORD'];
    gitlab_rails['initial_root_password'] = root_pass unless root_pass.to_s == '';
    postgresql['enable'] = false;
    gitlab_rails['db_host'] = ENV['DB_HOST'];
    gitlab_rails['db_password'] = ENV['DB_PASSWORD'];
    gitlab_rails['db_username'] = ENV['DB_USER'];
    gitlab_rails['db_database'] = ENV['DB_DATABASE'];
    redis['enable'] = false;
    gitlab_rails['redis_host'] = ENV['REDIS_HOST'];
    gitlab_rails['redis_password'] = ENV['REDIS_PASSWORD'];
    unicorn['worker_processes'] = 2;
    manage_accounts['enable'] = true;
    manage_storage_directories['manage_etc'] = false;
    gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';
    git_data_dir '/gitlab-data/git-data';
    gitlab_rails['shared_path'] = '/gitlab-data/shared';
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads';
    gitlab_ci['builds_directory'] = '/gitlab-data/builds';

---
# Source: gitlab-ce/charts/postgresql/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gitlab-postgresql
  labels:
    app: gitlab-postgresql
    chart: "postgresql-0.8.1"
    release: "gitlab"
    heritage: "Tiller"
  annotations:
    volume.beta.kubernetes.io/storage-class: "gitlab-data"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: gitlab-ce/charts/redis/templates/pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gitlab-redis
  labels:
    app: gitlab-redis
    chart: "redis-0.9.0"
    release: "gitlab"
    heritage: "Tiller"
  annotations:
    volume.beta.kubernetes.io/storage-class: "gitlab-data"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"

---
# Source: gitlab-ce/templates/data-pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gitlab-gitlab-ce-data
  annotations:
    volume.beta.kubernetes.io/storage-class: "gitlab-data"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"

---
# Source: gitlab-ce/templates/etc-pvc.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gitlab-gitlab-ce-etc
  annotations:
    volume.beta.kubernetes.io/storage-class: "gitlab-data"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"

---
# Source: gitlab-ce/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-postgresql
  labels:
    app: gitlab-postgresql
    chart: "postgresql-0.8.1"
    release: "gitlab"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: postgresql
  selector:
    app: gitlab-postgresql
---
# Source: gitlab-ce/charts/redis/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-redis
  labels:
    app: gitlab-redis
    chart: "redis-0.9.0"
    release: "gitlab"
    heritage: "Tiller"
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: gitlab-redis

---
# Source: gitlab-ce/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-gitlab-ce
  labels:
    app: gitlab-gitlab-ce
    chart: "gitlab-ce-0.2.2"
    release: "gitlab"
    heritage: "Tiller"
spec:
  type: NodePort
  ports:
  - name: ssh
    port: 22
    targetPort: ssh
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app: gitlab-gitlab-ce

---
# Source: gitlab-ce/charts/postgresql/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab-postgresql
  labels:
    app: gitlab-postgresql
    chart: "postgresql-0.8.1"
    release: "gitlab"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: gitlab-postgresql
    spec:
      containers:
      - name: gitlab-postgresql
        image: "postgres:9.6"
        imagePullPolicy: ""
        env:
        - name: POSTGRES_USER
          value: "gitlab"
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: "gitlab"
        - name: POSTGRES_DB
          value: "gitlab"
        - name: POSTGRES_INITDB_ARGS
          value: ""
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-postgresql
              key: postgres-password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: postgresql-db
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: gitlab-postgresql

---
# Source: gitlab-ce/charts/redis/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab-redis
  labels:
    app: gitlab-redis
    chart: "redis-0.9.0"
    release: "gitlab"
    heritage: "Tiller"
spec:
  template:
    metadata:
      labels:
        app: gitlab-redis
    spec:
      containers:
      - name: gitlab-redis
        image: "bitnami/redis:3.2.9-r2"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-redis
              key: redis-password
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
          
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: gitlab-redis
---
# Source: gitlab-ce/templates/deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab-gitlab-ce
  labels:
    app: gitlab-gitlab-ce
    chart: "gitlab-ce-0.2.2"
    release: "gitlab"
    heritage: "Tiller"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab-gitlab-ce
    spec:
      containers:
      - name: gitlab-gitlab-ce
        image: gitlab/gitlab-ce:9.4.1-ce.0
        imagePullPolicy: ""
        env:
        ## General GitLab Configs
        ##
        # This is a free-form env var that GitLab Omnibus uses to configure
        # everything. We're passing this in from a configmap and pulling some
        # of the values from the env vars defined below. This is done to
        # avoid leaving secrets visible in kubectl.
        - name: GITLAB_OMNIBUS_CONFIG
          valueFrom:
            configMapKeyRef:
              name: gitlab-gitlab-ce
              key: gitlab_omnibus_config
        - name: GITLAB_ROOT_PASSWORD
        - name: EXTERNAL_URL
          value: "https://gitlab.mytest.io/"
        ## DB configuration
        ##
        - name: DB_HOST
          value: gitlab-postgresql
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: gitlab-gitlab-ce
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-gitlab-ce
              key: db-password
        - name: DB_DATABASE
          value: "gitlab"
        ## Redis configuration
        ##
        - name: REDIS_HOST
          value: gitlab-redis
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-gitlab-ce
              key: redis-password
        ports:
        - name: ssh
          containerPort: 22
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /help
            port: http
          # This pod takes a very long time to start up. Be cautious when
          # lowering this value to avoid Pod death during startup.
          initialDelaySeconds: 200
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /help
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: gitlab-etc
          mountPath: /etc/gitlab
        - name: gitlab-data
          mountPath: /gitlab-data
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
          
      volumes:
      - name: gitlab-etc
        persistentVolumeClaim:
          claimName: gitlab-gitlab-ce-etc
      - name: gitlab-data
        persistentVolumeClaim:
          claimName: gitlab-gitlab-ce-data


---
# Source: gitlab-ce/templates/ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitlab-gitlab-ce
  labels:
    app: gitlab-gitlab-ce
    chart: "gitlab-ce-0.2.2"
    release: "gitlab"
    heritage: "Tiller"
spec:
  rules:
  - host: "gitlab.mytest.io"
    http:
      paths:
      - path: /
        backend:
          serviceName: gitlab-gitlab-ce
          servicePort: 80

---
# Source: gitlab-ce/charts/postgresql/templates/networkpolicy.yaml


